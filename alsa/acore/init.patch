--- ../alsa-kernel/core/init.c	2010-11-02 16:17:52.267995721 +0100
+++ init.c	2010-11-03 09:30:44.003861335 +0100
@@ -1,3 +1,5 @@
+#define __NO_VERSION__
+#include "adriver.h"
 /*
  *  Initialization routines
  *  Copyright (c) by Jaroslav Kysela <perex@perex.cz>
@@ -296,11 +298,19 @@ static unsigned int snd_disconnect_poll(
 	return POLLERR | POLLNVAL;
 }
 
+#ifdef CONFIG_SND_HAVE_NEW_IOCTL
 static long snd_disconnect_ioctl(struct file *file,
 				 unsigned int cmd, unsigned long arg)
 {
 	return -ENODEV;
 }
+#else
+static int snd_disconnect_ioctl_old(struct inode *inode, struct file *file,
+				    unsigned int cmd, unsigned long arg)
+{
+	return -ENODEV;
+}
+#endif
 
 static int snd_disconnect_mmap(struct file *file, struct vm_area_struct *vma)
 {
@@ -314,16 +324,22 @@ static int snd_disconnect_fasync(int fd,
 
 static const struct file_operations snd_shutdown_f_ops =
 {
+#ifndef LINUX_2_2
 	.owner = 	THIS_MODULE,
+#endif
 	.llseek =	snd_disconnect_llseek,
 	.read = 	snd_disconnect_read,
 	.write =	snd_disconnect_write,
 	.release =	snd_disconnect_release,
 	.poll =		snd_disconnect_poll,
+#ifdef CONFIG_SND_HAVE_NEW_IOCTL
 	.unlocked_ioctl = snd_disconnect_ioctl,
 #ifdef CONFIG_COMPAT
 	.compat_ioctl = snd_disconnect_ioctl,
 #endif
+#else
+	.ioctl =	snd_disconnect_ioctl_old,
+#endif
 	.mmap =		snd_disconnect_mmap,
 	.fasync =	snd_disconnect_fasync
 };
@@ -395,10 +411,12 @@ int snd_card_disconnect(struct snd_card
 		snd_printk(KERN_ERR "not all devices for card %i can be disconnected\n", card->number);
 
 	snd_info_card_disconnect(card);
+#ifndef CONFIG_SYSFS_DEPRECATED
 	if (card->card_dev) {
 		device_unregister(card->card_dev);
 		card->card_dev = NULL;
 	}
+#endif
 #ifdef CONFIG_PM
 	wake_up(&card->power_sleep);
 #endif
@@ -571,6 +589,7 @@ void snd_card_set_id(struct snd_card *ca
 }
 EXPORT_SYMBOL(snd_card_set_id);
 
+#ifndef CONFIG_SYSFS_DEPRECATED
 static ssize_t
 card_id_show_attr(struct device *dev,
 		  struct device_attribute *attr, char *buf)
@@ -632,6 +651,7 @@ card_number_show_attr(struct device *dev
 
 static struct device_attribute card_number_attrs =
 	__ATTR(number, S_IRUGO, card_number_show_attr, NULL);
+#endif /* CONFIG_SYSFS_DEPRECATED */
 
 /**
  *  snd_card_register - register the soundcard
@@ -650,15 +670,27 @@ int snd_card_register(struct snd_card *c
 
 	if (snd_BUG_ON(!card))
 		return -EINVAL;
-
+#ifndef CONFIG_SYSFS_DEPRECATED
 	if (!card->card_dev) {
+#ifdef CONFIG_SND_HAS_DEVICE_CREATE_DRVDATA
+		card->card_dev = device_create_drvdata(sound_class, card->dev,
+						       MKDEV(0, 0), card,
+						       "card%i", card->number);
+#elif LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 27)
 		card->card_dev = device_create(sound_class, card->dev,
 					       MKDEV(0, 0), card,
 					       "card%i", card->number);
+#else
+		card->card_dev = device_create(sound_class, card->dev,
+					       MKDEV(0, 0),
+					       "card%i", card->number);
+		if (card->card_dev && !IS_ERR(card->card_dev))
+			dev_set_drvdata(card->card_dev, card);
+#endif
 		if (IS_ERR(card->card_dev))
 			card->card_dev = NULL;
 	}
-
+#endif
 	if ((err = snd_device_register_all(card)) < 0)
 		return err;
 	mutex_lock(&snd_card_mutex);
@@ -675,6 +707,7 @@ int snd_card_register(struct snd_card *c
 	if (snd_mixer_oss_notify_callback)
 		snd_mixer_oss_notify_callback(card, SND_MIXER_OSS_NOTIFY_REGISTER);
 #endif
+#ifndef CONFIG_SYSFS_DEPRECATED
 	if (card->card_dev) {
 		err = device_create_file(card->card_dev, &card_id_attrs);
 		if (err < 0)
@@ -683,7 +716,7 @@ int snd_card_register(struct snd_card *c
 		if (err < 0)
 			return err;
 	}
-
+#endif
 	return 0;
 }
 
@@ -945,3 +978,16 @@ int snd_power_wait(struct snd_card *card
 
 EXPORT_SYMBOL(snd_power_wait);
 #endif /* CONFIG_PM */
+
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 6, 30)
+/* just for old ABI compatibility */
+struct snd_card *snd_card_new(int idx, const char *id,
+			      struct module *module, int extra_size)
+{
+	struct snd_card *card;
+	if (snd_card_create(idx, id, module, extra_size, &card) < 0)
+		return NULL;
+	return card;
+}
+EXPORT_SYMBOL(snd_card_new);
+#endif

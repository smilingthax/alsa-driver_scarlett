--- ../../alsa-kernel/core/oss/mixer_oss.c	2007-12-20 10:19:01.000000000 +0100
+++ mixer_oss.c	2007-12-20 10:45:48.000000000 +0100
@@ -1,3 +1,4 @@
+#include "adriver.h"
 /*
  *  OSS emulation layer for the mixer interface
  *  Copyright (c) by Jaroslav Kysela <perex@perex.cz>
@@ -20,6 +21,7 @@
  */
 
 #include <linux/init.h>
+#include <linux/smp_lock.h>
 #include <linux/slab.h>
 #include <linux/time.h>
 #include <linux/string.h>
@@ -377,24 +379,43 @@
 	return snd_mixer_oss_ioctl1(&fmixer, cmd, arg);
 }
 
-#ifdef CONFIG_COMPAT
+#if defined(CONFIG_COMPAT) && defined(CONFIG_SND_HAVE_NEW_IOCTL)
 /* all compatible */
 #define snd_mixer_oss_ioctl_compat	snd_mixer_oss_ioctl
 #else
 #define snd_mixer_oss_ioctl_compat	NULL
 #endif
 
+#ifndef CONFIG_SND_HAVE_NEW_IOCTL
+/* need to unlock BKL to allow preemption */
+static int snd_mixer_oss_ioctl_old(struct inode *inode, struct file * file,
+				   unsigned int cmd, unsigned long arg)
+{
+	int err;
+	unlock_kernel();
+	err = snd_mixer_oss_ioctl(file, cmd, arg);
+	lock_kernel();
+	return err;
+}
+#endif
+
 /*
  *  REGISTRATION PART
  */
 
 static const struct file_operations snd_mixer_oss_f_ops =
 {
+#ifndef LINUX_2_2
 	.owner =	THIS_MODULE,
+#endif
 	.open =		snd_mixer_oss_open,
 	.release =	snd_mixer_oss_release,
+#ifdef CONFIG_SND_HAVE_NEW_IOCTL
 	.unlocked_ioctl =	snd_mixer_oss_ioctl,
 	.compat_ioctl =	snd_mixer_oss_ioctl_compat,
+#else
+	.ioctl =	snd_mixer_oss_ioctl_old,
+#endif	
 };
 
 /*

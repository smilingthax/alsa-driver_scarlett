--- ../alsa-kernel/core/misc.c	2009-08-27 17:44:33.000000000 +0200
+++ misc.c	2009-09-01 08:28:18.000000000 +0200
@@ -1,3 +1,9 @@
+#define __NO_VERSION__
+#include "adriver.h"
+#ifndef KERN_DEFAULT
+#define KERN_DEFAULT	""
+#endif
+
 /*
  *  Misc and compatibility things
  *  Copyright (c) by Jaroslav Kysela <perex@perex.cz>
@@ -42,7 +48,7 @@
 {
 	if (res) {
 		release_resource(res);
-		kfree(res);
+		kfree_nocheck(res);
 	}
 }
 
@@ -115,15 +121,47 @@
 snd_pci_quirk_lookup(struct pci_dev *pci, const struct snd_pci_quirk *list)
 {
 	const struct snd_pci_quirk *q;
+	unsigned short subsystem_vendor, subsystem_device;
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 3, 0)
+	subsystem_vendor = pci->subsystem_vendor;
+	subsystem_device = pci->subsystem_device;
+#else
+	pci_read_config_word(pci, PCI_SUBSYSTEM_VENDOR_ID, &subsystem_vendor);
+	pci_read_config_word(pci, PCI_SUBSYSTEM_ID, &subsystem_device);
+#endif
 	for (q = list; q->subvendor; q++) {
-		if (q->subvendor != pci->subsystem_vendor)
+		if (q->subvendor != subsystem_vendor)
 			continue;
 		if (!q->subdevice ||
-		    (pci->subsystem_device & q->subdevice_mask) == q->subdevice)
+		    (subsystem_device & q->subdevice_mask) == q->subdevice)
 			return q;
 	}
 	return NULL;
 }
 EXPORT_SYMBOL(snd_pci_quirk_lookup);
 #endif
+
+/* just for compatibility reason */
+void snd_verbose_printk(const char *file, int line, const char *format, ...)
+{
+	va_list args;
+	va_start(args, format);
+	if (print_snd_pfx(0, file, line, format))
+		format += 3; /* skip the printk level-prefix */
+	vprintk(format, args);
+	va_end(args);
+}
+EXPORT_SYMBOL(snd_verbose_printk);
+
+void snd_verbose_printd(const char *file, int line, const char *format, ...)
+{
+	va_list args;
+	va_start(args, format);
+	if (print_snd_pfx(1, file, line, format))
+		format += 3; /* skip the printk level-prefix */
+	vprintk(format, args);
+	va_end(args);
+
+}
+EXPORT_SYMBOL(snd_verbose_printd);

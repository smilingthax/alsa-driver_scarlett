--- ../alsa-kernel/usb/usbmidi.c	2005-09-25 18:45:59.000000000 +0200
+++ usbmidi.c	2005-09-25 18:51:20.000000000 +0200
@@ -1,3 +1,5 @@
+#include "usbmidi.inc"
+
 /*
  * usbmidi.c - ALSA USB MIDI driver
  *
@@ -226,7 +228,11 @@
 /*
  * Processes the data read from the device.
  */
+#ifndef OLD_USB
 static void snd_usbmidi_in_urb_complete(struct urb* urb, struct pt_regs *regs)
+#else
+static void snd_usbmidi_in_urb_complete(struct urb* urb)
+#endif
 {
 	snd_usb_midi_in_endpoint_t* ep = urb->context;
 
@@ -246,11 +252,20 @@
 		}
 	}
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 5, 45)
+	if (!usb_pipeint(urb->pipe))
+#endif
+	{
 	urb->dev = ep->umidi->chip->dev;
 	snd_usbmidi_submit_urb(urb, GFP_ATOMIC);
+	}
 }
 
+#ifndef OLD_USB
 static void snd_usbmidi_out_urb_complete(struct urb* urb, struct pt_regs *regs)
+#else
+static void snd_usbmidi_out_urb_complete(struct urb* urb)
+#endif
 {
 	snd_usb_midi_out_endpoint_t* ep = urb->context;
 
@@ -331,8 +346,13 @@
 		return -ENOMEM;
 	memcpy(buf, data, len);
 	dump_urb("sending", buf, len);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 12)
 	err = usb_bulk_msg(ep->umidi->chip->dev, ep->urb->pipe, buf, len,
 			   NULL, 250);
+#else
+	err = usb_bulk_msg(ep->umidi->chip->dev, ep->urb->pipe, buf, len,
+			   NULL, HZ);
+#endif
 	kfree(buf);
 	return err;
 }
@@ -1290,7 +1310,11 @@
 	intf = umidi->iface;
 	if (!intf || intf->num_altsetting < 1)
 		return -ENOENT;
+#ifndef OLD_USB
 	hostif = intf->cur_altsetting;
+#else
+	hostif = &intf->altsetting[intf->act_altsetting];
+#endif
 	intfd = get_iface_desc(hostif);
 
 	for (i = 0; i < intfd->bNumEndpoints; ++i) {
@@ -1625,3 +1649,5 @@
 EXPORT_SYMBOL(snd_usbmidi_input_stop);
 EXPORT_SYMBOL(snd_usbmidi_input_start);
 EXPORT_SYMBOL(snd_usbmidi_disconnect);
+
+#include "usbmidi.inc1"

--- ../alsa-kernel/usb/usbmidi.c	2005-03-23 23:42:20.000000000 +0100
+++ usbmidi.c	2005-03-23 23:48:43.000000000 +0100
@@ -1,3 +1,5 @@
+#include "usbmidi.inc"
+
 /*
  * usbmidi.c - ALSA USB MIDI driver
  *
@@ -286,8 +288,13 @@
 		return -ENOMEM;
 	memcpy(buf, data, len);
 	dump_urb("sending", buf, len);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 12)
 	err = usb_bulk_msg(ep->umidi->chip->dev, ep->urb->pipe, buf, len,
 			   NULL, 1000);
+#else
+	err = usb_bulk_msg(ep->umidi->chip->dev, ep->urb->pipe, buf, len,
+			   NULL, HZ);
+#endif
 	kfree(buf);
 	return err;
 }
@@ -1055,8 +1062,13 @@
 
 	/* TODO: read port name from jack descriptor */
 	name_format = "%s MIDI %d";
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 11)
 	vendor = le16_to_cpu(umidi->chip->dev->descriptor.idVendor);
 	product = le16_to_cpu(umidi->chip->dev->descriptor.idProduct);
+#else
+	vendor = umidi->chip->dev->descriptor.idVendor;
+	product = umidi->chip->dev->descriptor.idProduct;
+#endif
 	for (i = 0; i < ARRAY_SIZE(snd_usbmidi_port_names); ++i) {
 		if (snd_usbmidi_port_names[i].vendor == vendor &&
 		    snd_usbmidi_port_names[i].product == product &&
@@ -1226,13 +1238,21 @@
 	struct usb_endpoint_descriptor* epd;
 	int i, out_eps = 0, in_eps = 0;
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 11)
 	if (le16_to_cpu(umidi->chip->dev->descriptor.idVendor) == 0x0582)
+#else
+	if (umidi->chip->dev->descriptor.idVendor == 0x0582)
+#endif
 		snd_usbmidi_switch_roland_altsetting(umidi);
 
 	intf = umidi->iface;
 	if (!intf || intf->num_altsetting < 1)
 		return -ENOENT;
+#ifndef OLD_USB
 	hostif = intf->cur_altsetting;
+#else
+	hostif = &intf->altsetting[intf->act_altsetting];
+#endif
 	intfd = get_iface_desc(hostif);
 
 	for (i = 0; i < intfd->bNumEndpoints; ++i) {
@@ -1562,3 +1582,5 @@
 EXPORT_SYMBOL(snd_usbmidi_input_stop);
 EXPORT_SYMBOL(snd_usbmidi_input_start);
 EXPORT_SYMBOL(snd_usbmidi_disconnect);
+
+#include "usbmidi.inc1"

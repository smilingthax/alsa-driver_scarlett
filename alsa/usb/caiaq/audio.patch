--- ../../alsa-kernel/usb/caiaq/audio.c	2013-04-29 11:45:04.792944327 +0200
+++ audio.c	2013-04-29 17:56:20.670941669 +0200
@@ -1,3 +1,5 @@
+#include "adriver.h"
+#include "../usbcompat.h"
 /*
  *   Copyright (c) 2006-2008 Daniel Mack, Karsten Wiese
  *
@@ -626,7 +628,11 @@
 	}
 }
 
+#if !defined(OLD_USB) && !defined(CONFIG_SND_NEW_IRQ_HANDLER)
+static void read_completed(struct urb *urb, struct pt_regs *regs)
+#else
 static void read_completed(struct urb *urb)
+#endif
 {
 	struct snd_usb_caiaq_cb_info *info = urb->context;
 	struct snd_usb_caiaqdev *cdev;
@@ -683,6 +689,9 @@
 
 	if (send_it) {
 		out->number_of_packets = outframe;
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3, 8, 0)
+		out->transfer_flags = URB_ISO_ASAP;
+#endif
 		usb_submit_urb(out, GFP_ATOMIC);
 	} else {
 		struct snd_usb_caiaq_cb_info *oinfo = out->context;
@@ -698,10 +707,17 @@
 	}
 
 	urb->number_of_packets = FRAMES_PER_URB;
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3, 8, 0)
+	urb->transfer_flags = URB_ISO_ASAP;
+#endif
 	usb_submit_urb(urb, GFP_ATOMIC);
 }
 
+#if !defined(OLD_USB) && !defined(CONFIG_SND_NEW_IRQ_HANDLER)
+static void write_completed(struct urb *urb, struct pt_regs *regs)
+#else
 static void write_completed(struct urb *urb)
+#endif
 {
 	struct snd_usb_caiaq_cb_info *info = urb->context;
 	struct snd_usb_caiaqdev *cdev = info->cdev;
@@ -763,6 +779,9 @@
 						* BYTES_PER_FRAME;
 		urbs[i]->context = &cdev->data_cb_info[i];
 		urbs[i]->interval = 1;
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3, 8, 0)
+		urbs[i]->transfer_flags = URB_ISO_ASAP;
+#endif
 		urbs[i]->number_of_packets = FRAMES_PER_URB;
 		urbs[i]->complete = (dir == SNDRV_PCM_STREAM_CAPTURE) ?
 					read_completed : write_completed;

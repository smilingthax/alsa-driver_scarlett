--- ../../alsa-kernel/usb/usx2y/usbusx2yaudio.c	2005-01-30 18:12:38.000000000 +0100
+++ usbusx2yaudio.c	2005-01-30 18:16:48.000000000 +0100
@@ -298,7 +298,11 @@
 	usX2Y_clients_stop(usX2Y);
 }
 
+#ifndef OLD_USB
 static void i_usX2Y_urb_complete(struct urb *urb, struct pt_regs *regs)
+#else
+static void i_usX2Y_urb_complete(struct urb *urb)
+#endif
 {
 	snd_usX2Y_substream_t *subs = (snd_usX2Y_substream_t*)urb->context;
 	usX2Ydev_t *usX2Y = subs->usX2Y;
@@ -336,7 +340,11 @@
 	}
 }
 
+#ifndef OLD_USB
 static void usX2Y_urbs_set_complete(usX2Ydev_t * usX2Y, void (*complete)(struct urb *, struct pt_regs *))
+#else
+static void usX2Y_urbs_set_complete(usX2Ydev_t * usX2Y, void (*complete)(struct urb *))
+#endif
 {
 	int s, u;
 	for (s = 0; s < 4; s++) {
@@ -356,7 +364,11 @@
 	usX2Y->prepare_subs = NULL;
 }
 
+#ifndef OLD_USB
 static void i_usX2Y_subs_startup(struct urb *urb, struct pt_regs *regs)
+#else
+static void i_usX2Y_subs_startup(struct urb *urb)
+#endif
 {
 	snd_usX2Y_substream_t *subs = (snd_usX2Y_substream_t*)urb->context;
 	usX2Ydev_t *usX2Y = subs->usX2Y;
@@ -368,7 +380,11 @@
 			wake_up(&usX2Y->prepare_wait_queue);
 		}
 
+#ifndef OLD_USB
 	i_usX2Y_urb_complete(urb, regs);
+#else
+	i_usX2Y_urb_complete(urb);
+#endif
 }
 
 static void usX2Y_subs_prepare(snd_usX2Y_substream_t *subs)
@@ -651,7 +667,11 @@
 };
 #define NOOF_SETRATE_URBS ARRAY_SIZE(SetRate48000)
 
+#ifndef OLD_USB
 static void i_usX2Y_04Int(struct urb* urb, struct pt_regs *regs)
+#else
+static void i_usX2Y_04Int(struct urb* urb)
+#endif
 {
 	usX2Ydev_t*	usX2Y = urb->context;
 	
@@ -1017,10 +1037,18 @@
 
 	if (0 > (err = usX2Y_audio_stream_new(card, 0xA, 0x8)))
 		return err;
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 11)
 	if (le16_to_cpu(usX2Y(card)->chip.dev->descriptor.idProduct) == USB_ID_US428)
+#else
+	if (usX2Y(card)->chip.dev->descriptor.idProduct == USB_ID_US428)
+#endif
 	     if (0 > (err = usX2Y_audio_stream_new(card, 0, 0xA)))
 		     return err;
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 11)
 	if (le16_to_cpu(usX2Y(card)->chip.dev->descriptor.idProduct) != USB_ID_US122)
+#else
+	if (usX2Y(card)->chip.dev->descriptor.idProduct != USB_ID_US122)
+#endif
 		err = usX2Y_rate_set(usX2Y(card), 44100);	// Lets us428 recognize output-volume settings, disturbs us122.
 	return err;
 }
